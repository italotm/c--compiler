/*ignorando os comment*/

//namespace aasas {using b = uow;};
//namespace a { using b = uow; namespace a { using b = uow; }; };

using b = uow;
[ assembly : a]
[ assembly : a (new array [this] [] {})]
[assembly : a (new decimal { this })]
[ assembly : a (new array [this] [] {} (asasas))]
[assembly : a (unchecked (this))]
[assembly : a (1-1)]
[ assembly : a (new array [this] [] {}), atribut( 1- 1)]
namespace a { using b = uow; namespace a { using b = uow; }; };
namespace a { using b = uow; namespace a { using b = uow; }; };
[a,b,c,d] public enum ab {[a,b] cd = this}
[a,b] new delegate void asasa ();
[a,b] new delegate void asasa ([a,s,d] ref asa asas);
[a,b] new delegate void asasa ([a,s,d] ref asa asas, [a,s,d] ref asa asas, [a,s,d] params FLOAT asas);
[a,b,c,d] public enum ab {[a,b] cd = this}
[r] new interface inter : dfg, grd {};
[r] new interface inter : dfg, grd {[a] new void aisjai([a,s,d] params FLOAT asas);};
[r] new interface inter : dfg, grd {[f] new integer sdsd {[a,s] get; [s] set;}};
[r] new interface inter : dfg, grd {[sd,sds,sd] new event string sdsd;};
[r, g] public interface inter : dfg, grd {[sd,sds,sd] new string this [[a,s,d] params FLOAT asas] {[a,s] get; [s] set;}};

[asas, asas] public struct strutura {}
[asas, asas] public struct strutura : ds,fd {};
[asas, asas] public struct strutura : ds,fd {[asas] internal const integer a,f,g;};
[asas, asas] public struct strutura {[a,f] volatile string asas = this;};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas);};
[asas, asas] public struct strutura {[w] sealed void su ();};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){asas : const string casa = this;}};

[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){base.asas(boo || boo);}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){new test(boo || boo);}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){i++;}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){;}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){if (a || b){}}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){if (a || b){}else{int a = 3;}}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){if (a || b){switch (num){case 3: int a = 2; case 1: int b = 7; default: string c = massa;}}else{int a = 3;}}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){if (a || b){while(i<0){i++;}}}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){while(a || b){b=3;}}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){do{a=6;}while(a || b);}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){for (int i = 0; i < 10; i++){}}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){foreach (string list in lista){a=6;}}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){break;}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){continue;}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){goto asas;}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){goto case (a || b);}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){goto default;}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){return;}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){return a==b;}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){throw a && b;}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){try{}catch(string){}}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){try{}finally{}}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){try{}catch(string){a=5;}finally{}}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){checked{}}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){unchecked{}}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){lock(a || b)goto asas;}};
[asas, asas] public struct strutura {[w] sealed void su ([a,s,d] params FLOAT asas){using(string c = teste)try{}catch(string){a=5;}finally{}}};